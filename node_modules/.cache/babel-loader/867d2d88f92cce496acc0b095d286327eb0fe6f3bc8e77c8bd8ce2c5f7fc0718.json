{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Axios from 'axios';\nconst state = () => ({\n  user: {},\n  loading: false,\n  host: \"http://localhost:3000\"\n});\nconst mutations = {\n  SET_USER(state, user) {\n    state.user = user;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  }\n};\nconst actions = {\n  register: function ({\n    commit,\n    state\n  }, data) {\n    return new Promise((resolve, reject) => {\n      let headers = {\n        'x-access-token': sessionStorage.getItem('token')\n      };\n      let url = state.host + \"/api/auth/signup\";\n      let data_user = {\n        username: data.username,\n        email: data.email,\n        password: data.password\n      };\n      Axios.post(url, data_user, {\n        headers: headers\n      }).then(response => {\n        commit('SET_LOADING', false);\n        resolve(response);\n      }).catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT');\n          sessionStorage.removeItem('token');\n          delete Axios.defaults.headers.common['x-access-token'];\n          this.$router.push({\n            name: 'login'\n          });\n        }\n        reject(error);\n      });\n    });\n  },\n  get_users: function ({\n    commit,\n    state\n  }) {\n    commit('SET_LOADING', true);\n    return new Promise((resolve, reject) => {\n      let headers = {\n        'x-access-token': sessionStorage.getItem('token')\n      };\n      let url = state.host + \"/api/users\";\n      Axios.get(url, {\n        headers: headers\n      }).then(response => {\n        const data = response.data;\n        // console.log(data);\n        commit('SET_LOADING', false);\n        commit('SET_USER', data);\n        resolve(response);\n      }).catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT');\n          sessionStorage.removeItem('token');\n          delete Axios.defaults.headers.common['x-access-token'];\n          this.$router.push({\n            name: 'login'\n          });\n        }\n        reject(error);\n      });\n    });\n  },\n  update_users: function ({\n    commit,\n    state\n  }, data) {\n    return new Promise((resolve, reject) => {\n      let headers = {\n        'x-access-token': sessionStorage.getItem('token')\n      };\n      let url = state.host + \"/api/users/\" + data.id;\n      let data_user = {\n        name: data.name,\n        username: data.username,\n        status: data.status\n      };\n      Axios.put(url, data_user, {\n        headers: headers\n      }).then(response => {\n        commit('SET_LOADING', false);\n        resolve(response);\n      }).catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT');\n          sessionStorage.removeItem('token');\n          delete Axios.defaults.headers.common['x-access-token'];\n          this.$router.push({\n            name: 'login'\n          });\n        }\n        reject(error);\n      });\n    });\n  },\n  delete_user: function ({\n    commit,\n    state\n  }, data) {\n    commit('SET_LOADING', true);\n    return new Promise((resolve, reject) => {\n      let headers = {\n        'x-access-token': sessionStorage.getItem('token')\n      };\n      let url = state.host + \"/api/users/\" + data.id;\n      Axios.delete(url, {\n        headers: headers\n      }).then(response => {\n        commit('SET_LOADING', false);\n        resolve(response);\n      }).catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT');\n          sessionStorage.removeItem('token');\n          delete Axios.defaults.headers.common['x-access-token'];\n          this.$router.push({\n            name: 'login'\n          });\n        }\n        reject(error);\n      });\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["Axios","state","user","loading","host","mutations","SET_USER","SET_LOADING","actions","register","commit","data","Promise","resolve","reject","headers","sessionStorage","getItem","url","data_user","username","email","password","post","then","response","catch","error","status","removeItem","defaults","common","$router","push","name","get_users","get","update_users","id","put","delete_user","delete","namespaced"],"sources":["/Users/agindo@pusdatin/Downloads/vue/kamookopi_fe/src/store/modules/user.js"],"sourcesContent":["import Axios from 'axios'\n\nconst state = () => ({\n  user: {},\n  loading: false,\n  host: \"http://localhost:3000\"\n})\n\nconst mutations = {\n  SET_USER(state, user) {\n    state.user = user\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  }\n}\n\nconst actions = {\n  register: function({commit, state}, data) {\n    return new Promise((resolve, reject) => {\n      let headers = {'x-access-token': sessionStorage.getItem('token')}\n      let url = state.host+\"/api/auth/signup\";\n      let data_user = {\n        username: data.username,\n        email: data.email,\n        password: data.password\n      };\n      Axios.post(url, data_user, {headers: headers})\n      .then(response => {\n        commit('SET_LOADING', false)\n        resolve(response)\n      })\n      .catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT')\n          sessionStorage.removeItem('token')\n          delete Axios.defaults.headers.common['x-access-token']\n          this.$router.push({name: 'login'})\n        }\n        reject(error)\n      })\n    })\n  },\n  get_users: function({commit, state}) {\n    commit('SET_LOADING', true)\n    return new Promise((resolve, reject) => {\n      let headers = {'x-access-token': sessionStorage.getItem('token')}\n      let url = state.host+\"/api/users\";\n      Axios.get(url, {headers: headers})\n      .then(response => {\n        const data = response.data;\n        // console.log(data);\n        commit('SET_LOADING', false)\n        commit('SET_USER', data)\n        resolve(response)\n      })\n      .catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT')\n          sessionStorage.removeItem('token')\n          delete Axios.defaults.headers.common['x-access-token']\n          this.$router.push({name: 'login'})\n        }\n        reject(error)\n      })\n    })\n  },\n  update_users: function({commit, state}, data) {\n    return new Promise((resolve, reject) => {\n      let headers = {'x-access-token': sessionStorage.getItem('token')}\n      let url = state.host+\"/api/users/\"+data.id;\n      let data_user = {\n        name: data.name,\n        username: data.username,\n        status: data.status\n      };\n      Axios.put(url, data_user, {headers: headers})\n      .then(response => {\n        commit('SET_LOADING', false)\n        resolve(response)\n      })\n      .catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT')\n          sessionStorage.removeItem('token')\n          delete Axios.defaults.headers.common['x-access-token']\n          this.$router.push({name: 'login'})\n        }\n        reject(error)\n      })\n    })\n  },\n  delete_user: function({commit, state}, data) {\n    commit('SET_LOADING', true)\n    return new Promise((resolve, reject) => {\n      let headers = {'x-access-token': sessionStorage.getItem('token')}\n      let url = state.host+\"/api/users/\"+data.id;\n      Axios.delete(url, {headers: headers})\n      .then(response => {\n        commit('SET_LOADING', false)\n        resolve(response)\n      })\n      .catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT')\n          sessionStorage.removeItem('token')\n          delete Axios.defaults.headers.common['x-access-token']\n          this.$router.push({name: 'login'})\n        }\n        reject(error)\n      })\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}