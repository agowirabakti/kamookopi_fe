{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Axios from 'axios';\nconst state = () => ({\n  kelola: {},\n  kata: {},\n  loading: false,\n  host: \"http://localhost:3000\"\n});\nconst mutations = {\n  SET_KELOLA(state, kelola) {\n    state.kelola = kelola;\n  },\n  SET_KATA(state, kata) {\n    state.kata = kata;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  }\n};\nconst actions = {\n  get_kelolas: function ({\n    commit,\n    state\n  }) {\n    commit('SET_LOADING', true);\n    return new Promise((resolve, reject) => {\n      let headers = {\n        'x-access-token': sessionStorage.getItem('token')\n      };\n      let url = state.host + \"/api/kelolas\";\n      Axios.get(url, {\n        headers: headers\n      }).then(response => {\n        const data = response.data;\n        // console.log(data);\n        commit('SET_LOADING', false);\n        commit('SET_KELOLA', data);\n        resolve(response);\n      }).catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT');\n          sessionStorage.removeItem('token');\n          delete Axios.defaults.headers.common['x-access-token'];\n          this.$router.push({\n            name: 'login'\n          });\n        }\n        reject(error);\n      });\n    });\n  },\n  tambah_kelola: function ({\n    commit,\n    state\n  }, data) {\n    commit('SET_LOADING', true);\n    return new Promise((resolve, reject) => {\n      let headers = {\n        'x-access-token': sessionStorage.getItem('token')\n      };\n      let url = state.host + \"/api/kelolas\";\n      let data_kelola = {\n        barangId: data.nama_barang,\n        stok: data.stok,\n        userId: null\n      };\n      Axios.post(url, data_kelola, {\n        headers: headers\n      }).then(response => {\n        commit('SET_LOADING', false);\n        // commit('SET_KATA', response.data)\n        resolve(response);\n      }).catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT');\n          sessionStorage.removeItem('token');\n          delete Axios.defaults.headers.common['x-access-token'];\n          this.$router.push({\n            name: 'login'\n          });\n        }\n        reject(error);\n      });\n    });\n  },\n  delete_kelola: function ({\n    commit,\n    state\n  }, data) {\n    commit('SET_LOADING', true);\n    return new Promise((resolve, reject) => {\n      let headers = {\n        'x-access-token': sessionStorage.getItem('token')\n      };\n      let url = state.host + \"/api/kelolas/\" + data.id;\n      Axios.delete(url, {\n        headers: headers\n      }).then(response => {\n        commit('SET_LOADING', false);\n        resolve(response);\n      }).catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT');\n          sessionStorage.removeItem('token');\n          delete Axios.defaults.headers.common['x-access-token'];\n          this.$router.push({\n            name: 'login'\n          });\n        }\n        reject(error);\n      });\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["Axios","state","kelola","kata","loading","host","mutations","SET_KELOLA","SET_KATA","SET_LOADING","actions","get_kelolas","commit","Promise","resolve","reject","headers","sessionStorage","getItem","url","get","then","response","data","catch","error","status","removeItem","defaults","common","$router","push","name","tambah_kelola","data_kelola","barangId","nama_barang","stok","userId","post","delete_kelola","id","delete","namespaced"],"sources":["/Users/agindo@pusdatin/Downloads/vue/kamookopi_fe/src/store/modules/kelola.js"],"sourcesContent":["import Axios from 'axios'\n\nconst state = () => ({\n  kelola: {},\n  kata: {},\n  loading: false,\n  host: \"http://localhost:3000\"\n})\n\nconst mutations = {\n  SET_KELOLA(state, kelola) {\n    state.kelola = kelola\n  },\n  SET_KATA(state, kata) {\n    state.kata = kata\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  }\n}\n\nconst actions = {\n  get_kelolas: function({commit, state}) {\n    commit('SET_LOADING', true)\n    return new Promise((resolve, reject) => {\n      let headers = {'x-access-token': sessionStorage.getItem('token')}\n      let url = state.host+\"/api/kelolas\";\n      Axios.get(url, {headers: headers})\n      .then(response => {\n        const data = response.data;\n        // console.log(data);\n        commit('SET_LOADING', false)\n        commit('SET_KELOLA', data)\n        resolve(response)\n      })\n      .catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT')\n          sessionStorage.removeItem('token')\n          delete Axios.defaults.headers.common['x-access-token']\n          this.$router.push({name: 'login'})\n        }\n        reject(error)\n      })\n    })\n  },\n  tambah_kelola: function({commit, state}, data) {\n    commit('SET_LOADING', true)\n    return new Promise((resolve, reject) => {\n      let headers = {'x-access-token': sessionStorage.getItem('token')}\n      let url = state.host+\"/api/kelolas\";\n      let data_kelola = {\n        barangId: data.nama_barang,\n        stok: data.stok,\n        userId: null\n      };\n      Axios.post(url, data_kelola, {headers: headers})\n      .then(response => {\n        commit('SET_LOADING', false)\n        // commit('SET_KATA', response.data)\n        resolve(response)\n      })\n      .catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT')\n          sessionStorage.removeItem('token')\n          delete Axios.defaults.headers.common['x-access-token']\n          this.$router.push({name: 'login'})\n        }\n        reject(error)\n      })\n    })\n  },\n  delete_kelola: function({commit, state}, data) {\n    commit('SET_LOADING', true)\n    return new Promise((resolve, reject) => {\n      let headers = {'x-access-token': sessionStorage.getItem('token')}\n      let url = state.host+\"/api/kelolas/\"+data.id;\n      Axios.delete(url, {headers: headers})\n      .then(response => {\n        commit('SET_LOADING', false)\n        resolve(response)\n      })\n      .catch(error => {\n        if (error.response.status == 401) {\n          commit('SET_LOGOUT')\n          sessionStorage.removeItem('token')\n          delete Axios.defaults.headers.common['x-access-token']\n          this.$router.push({name: 'login'})\n        }\n        reject(error)\n      })\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}